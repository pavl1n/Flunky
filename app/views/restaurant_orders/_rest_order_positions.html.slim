.container.p-0[style="height: 100vh;"]
  h1.h3.mb-3
    = t 'profile.settings'
  .row
    .col-md-5.col-xl-4
      = render 'user/panel'
    .col-md-7.col-xl-8
      .tab-content
        #account.tab-pane.fade.show.active[role="tabpanel"]
          .card
            .card-header
              .card-actions.float-right
              h5.card-title.mb-0
                | Orders
            table[border="1" width="100%" cellpadding="5"]
              - unless @rest_orders.nil?
                - @rest_orders.each do |rest_order|
                  tr
                    th
                      | Order id:
                      = rest_order.id
                    th
                      | Quantity
                    th
                      | State
                    th
                      | Action
                    th
                      | Cancel
                  tr
                    td
                      - rest_order.find_products_name(current_user.id).each do |product|
                        = product
                        br
                    td
                      - rest_order.find_products_quantity(current_user.id).each do |quantity|
                        = quantity
                        br
                    td
                      = rest_order.status
                    td
                      - unless rest_order.approved
                        = button_to 'Approve', { controller: :restaurant_orders, action: :update }, params: { restaurant_order: rest_order, approved: true }, remote: true, disabled: rest_order.cancel? || rest_order.done?
                      - else
                        = button_to 'Finish order', { controller: :restaurant_orders, action: :update }, params: { restaurant_order: rest_order, status: 'finish' }, remote: true, disabled: rest_order.cancel? || rest_order.done?
                    td
                      = button_to 'Cancel', { controller: :restaurant_orders, action: :update }, params: { restaurant_order: rest_order, status: 'cancel' }, remote: true, disabled: rest_order.cancel? || rest_order.done?
